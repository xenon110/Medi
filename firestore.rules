rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isPatient() {
      return isAuth() && get(/databases/$(database)/documents/patients/$(request.auth.uid)).data.role == 'patient';
    }

    function isDoctor() {
      return isAuth() && get(/databases/$(database)/documents/doctors/$(request.auth.uid)).data.role == 'doctor';
    }
    
    // PATIENTS can create and read their own profile
    match /patients/{patientId} {
      allow read, create: if isAuth() && request.auth.uid == patientId;
    }

    // DOCTORS can read their own profile and patients can read doctor profiles
    match /doctors/{doctorId} {
      allow read: if isAuth();
      allow write: if isAuth() && request.auth.uid == doctorId;
    }
    
    // EMERGENCIES can only be created by authenticated patients
    match /emergencies/{emergencyId} {
        allow create: if isPatient() && request.resource.data.patientId == request.auth.uid;
        allow read, write: if false;
    }

    // REPORTS
    match /reports/{reportId} {
      // READ: Patients can read their own reports. Doctors can read reports assigned to them.
      allow read: if isAuth() && (
                    (isPatient() && resource.data.patientId == request.auth.uid) ||
                    (isDoctor() && resource.data.doctorId == request.auth.uid)
                  );

      // CREATE: A patient can create a report for themselves.
      allow create: if isPatient() && request.resource.data.patientId == request.auth.uid;

      // UPDATE:
      // - A patient can update their own report to assign a doctorId (send to doctor).
      // - A doctor can update a report assigned to them (review, add notes).
      allow update: if isAuth() && (
                      (isPatient() && resource.data.patientId == request.auth.uid && request.resource.data.doctorId != null) ||
                      (isDoctor() && resource.data.doctorId == request.auth.uid)
                    );

      // DELETE: Nobody can delete reports for data integrity.
      allow delete: if false;
    }
  }
}
